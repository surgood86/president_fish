Генерация ssh, и местоположение ssh
ssh keygen и на все вопросы просто нажимаешь enter

ssh-keygen -R <host> предоставляет SSH ключ серверу к которому хотим подключится
Настройка ssh для входа через пользователя
подключаемся к серверу через
ssh root@ip_adress

создаем нового пользователя

(deluser username) for deleting ЕСЛИ ХОЧЕШЬ УДАЛИТЬ НЕКОГО ПОЛЬЗОВАТЕЛЯ, НЕ НАДО ЭТО ПИСАТЬ

adduser exampleuser
usermod -aG sudo exampleuser
su - exampleuser

конфигурация sshd
vi /etc/ssh/sshd_config
AllowUsers exampleuser
systemctl restart sshd


Исправление ошибки с sudo
подключаемся к серверу через root
ssh root@ip_adress
apt-get install sudo
visudo
добавить в концу строчку с именем пользователя
exampleuser ALL=(ALL)ALL

Для подключения к серверу без пароля
ssh-copy-id exampleuser@ip_address

После подключения к серверу по ssh:

Начальный софт:
sudo apt-get update ; \
sudo apt-get install -y vim mosh tmux htop git curl wget unzip zip gcc build-essential make

Конфигурация ssh, для подключения только по ssh, без пароля
sudo vim /etc/ssh/sshd_config
    AllowUsers "YOUR USERNAME"
    PermitRootLogin no
    PasswordAuthentication no

sudo service ssh restart

Поменять пароль для юзера "YOUR USERNAME"
sudo passwd "YOUR USERNAME"

Если хотите подключиться по mosh
mosh username@server_ip
могут быть проблемы с локалями

Начальные необходимые пакеты для корректной работы python

#sudo apt-get install -y zsh tree redis-server nginx zlib1g-dev libbz2-dev libreadline-dev llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev liblzma-dev python3-dev python-pil python3-lxml libxslt-dev python-libxml2 python-libxslt1 libffi-dev libssl-dev python-dev gnumeric libsqlite3-dev libpq-dev libxml2-dev libjpeg-dev libfreetype6-dev libcurl4-openssl-dev supervisor
sudo apt-get install -y zsh tree redis-server nginx zlib1g-dev libbz2-dev libreadline-dev llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev liblzma-dev python3-dev python3-lxml libxslt-dev python-libxml2 libffi-dev libssl-dev python-dev gnumeric libsqlite3-dev libpq-dev libxml2-dev libjpeg-dev libfreetype6-dev libcurl4-openssl-dev supervisor
### python-libxml2 python-libxslt1 - не утсановились!!!!!!
Установка oh-my-zsh
sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

Если нужны доп команды, типа alias
vim ~/.zshrc
    alias cls="clear"

Для перехода в zsh
zsh
для выхода
exit
для перехода в bash
bash
#################################################################
Установка python из исходников, ссылку для gzip можно посмотреть на сайте
Скачиваем архив python, распаковываем его, собираем с помощью сборшиков типа make и тд, и устанавливаем все в одну папку
/home/tusur/.python, чтобы в будущем если придется удалить python, нужно будет удалить лишь одну папку

wget https://www.python.org/ftp/python/3.9.5/Python-3.9.5.tgz ; \
tar xvf Python-3.9.* ; \
cd Python-3.9.5 ; \
mkdir ~/.python ; \
./configure --enable-optimizations --prefix=/home/tusur/.python ; \
make -j8 ; \
sudo make altinstall

"""
В СЛУЧАЕ ОШИБКИ: returned non-zero exit status 1. make: *** [Makefile:1275: altinstall] Error 1

На всякий случай, если кто-то читает эту ветку, проблема в том, что отсутствует зависимость. В данном случае заголовки zlib.

В принципе, вы должны:

1.- Включите deb-src http://archive.ubuntu.com/ubuntu/ .

 echo "deb-src http://archive.ubuntu.com/ubuntu/ bionic main" >> /etc/apt/sources.list
2.- sudo apt update

3.- Установите пакеты Python

sudo apt-get build-dep python3.6
Теперь вы можете бежатьmake altinstall

Вы можете прочитать более подробную информацию на https://bugs.python.org/issue36135 .
"""


для включения python в path
vim ~/.bashrc, или ~/.zshrc если работаете в zsh
    export PATH=/path/to/your/app/bin:$PATH
(/home/tusur/.python/bin')
source ~/.bashrc

обновить pip
sudo python3 -m pip install -U pip
############################################
создание нужной директории для проекта и создание виртуального окружения
mkdir code && cd code

sudo apt install git

git clone (link from git)

sudo apt-get install python3-venv

python(Version) -m venv env
source env/bin/activate для активации
deactivate для деактивации

Создание gunicorn конвига ?????????????????????????????если что-то не будет работать перепроверь эти настройки
#vim /path/to/your/project/gunicorn_config.py
vim /president_fish/gunicorn_config.py

command = 'home/tusur/code/env/bin/gunicorn'
pythonpath = 'home/tusur/code/president_fish'
bind = '127.0.0.1:8001'
workers = 3
user = 'tusur'
limit_request_fields = 32000
limit_request_field_size = 0
raw_env = 'DJANGO_SETTINGS_MODULE=president_fish.settings'

ЕСЛИ СЛУЧАЙНО НАЖАЛ CTRL+S В VIM, НАЖМИ CTRL+Q ДЛЯ ВЫХОДА

После создаем bash скрипт для запуска gunicorn процессов
cd path/to/code
mkdir bin (рядом с env, и самим проектом)
vim bin/start_gunicorn.sh
	#!/bin/bash
	source /home/tusur/code/env/bin/activate

даем права для исполнения файла
sudo chmod +x bin/start_gunicorn.sh

Далее устанавливаем нужные пакеты в env
если есть requirements.txt, будет лучше
cd code
source env/bin/activate
pip install package
or
pip install -r requirements.txt
сохраняем зависимости в requirements.txt
pip freeze > requirements.txt
source env/bin/active
python manage.py collectstatic
deactivate

Первое тестирование gunicorn
cd code
source bin/start_gunicorn.sh
смотрим что да как
если нет ошибок
то останавливаем все с помощью ctrl+C
может выкинуть из сервера

Настройка nginx для проксирования запросов на gunicorn
sudo vim /etc/nginx/sites-enabled/
там заходит на default@
удаляем оттуда все, и ставим это

server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root /var/tusur/html;

        index index.html index.htm index.nginx-debian.html;

        server_name _;

        # Проксирования
        location / {
                proxy_pass http://127.0.0.1:8001;
                proxy_set_header X-Forwarded-Host $server_name;
                proxy_set_header X-Real-IP $remote_addr;
                add_header P3P 'CP="ALL DSP COR PSAa PSDa OUR NOR ONL UNI COM NAV"';
                add_header Access-Control-Allow-Origin *;
        }

        # static файлы
        location /static/ {
            alias /home/tusur/code/president_fish/staticfiles/;
        }

        # media файлы
        location /media/ {
            alias /home/tusur/code/president_fish/media/;
        }
}

sudo service nginx restart
DEBUG=True
далее запускаем gunicorn и заходим на сайт через браузер, для тестирования
htop для проверки процессов

Далее идет настройка supervisor, чтобы он следил за gunicorn

sudo vim /etc/supervisor/conf.d/president_fish.conf
    [program:gunicorn]
	command=/home/tusur/code/bin/start_gunicorn.sh
	user=tusur
	process_name=%(program_name)s
	numprocs=1
	autostart=true
	autorestart=true
	redirect_stderr=true

sudo service supervisor restart

теперь ставим postgresql
sudo apt update ; \
sudo apt -y install postgresql ;

POSTGRESQL

Задать пароль для postgres, и создать нового пользователя django_user

sudo passwd postgres
su - postgres
export PATH=$PATH:/usr/lib/postgresql/11/bin
createdb --encoding UNICODE django_db --username postgres
exit

создать юзера django_user и задать ему все привелегии

sudo -u postgres psql
postgres=# ...
create user django_user with password 'some_password';
ALTER USER django_user CREATEDB;
grant all privileges on database django_db to django_user;
\c django_db
GRANT ALL ON ALL TABLES IN SCHEMA public to django_user;
GRANT ALL ON ALL SEQUENCES IN SCHEMA public to django_user;
GRANT ALL ON ALL FUNCTIONS IN SCHEMA public to django_user;
CREATE EXTENSION pg_trgm;
ALTER EXTENSION pg_trgm SET SCHEMA public;
UPDATE pg_opclass SET opcdefault = true WHERE opcname='gin_trgm_ops';
\q

теперь можно протестировать базу данных подключившись к нему

vim ~/.pgpass
    localhost:5432:django_db:django_user:some_password

chmod 600 ~/.pgpass
sudo psql -h localhost -U django_user django_db

далее переходим в директорию нашего проекта
активируем виртуальное окружение
cd code
source env/bin/activate
cd president_fish
Проверяем все ли в порядке в .env файле в president_fish/.env
задаем там значения для нашей postgres базы данных
выходим оттуда
и пишем команду
python manage.py migrate
python manage.py update_products all
для скачивания всех товаров с нужного сайта
выходим с виртуального окружения
deactivate
дальше перезапускаем supervisor
sudo service supervisor restart
и проверям htop

Далее привязка домена идет через сайт

Для получения бесплатного ssl сертификата переходим на Let's Encrypt
Далее там нажимаем на Certbot
Там выбираем нужную конфигурацию http сервера(nginx) и ОС(debian)
И следуем инструкция написанным там

рому хотим подключится
 ПОЛЬЗОВАТЕЛЯ, НЕ НАДО ЭТО ПИСАТЬ
nzip zip gcc build-essential make
я
g-dev libbz2-dev libreadline-dev llvm libncurses5-dev libncursesw5-dev
-dev libbz2-dev libreadline-dev llvm libncurses5-dev libncursesw5-dev
yrussell/oh-my-zsh/master/tools/install.sh)"
#######
отреть на сайте
щью сборшиков типа make и тд, и устанавливаем все в одну папку
 python, нужно будет удалить лишь одну папку
tgz ; \
ython ; \
* [Makefile:1275: altinstall] Error 1
 том, что отсутствует зависимость. В данном случае заголовки zlib.
in" >> /etc/apt/sources.list
bugs.python.org/issue36135 .
ного окружения
и что-то не будет работать перепроверь эти настройки
;
name;
OUR NOR ONL UNI COM NAV"';
les/;
для тестирования
rn
django_user
;
;
_trgm_ops';
мурому хотим подключится
 ПОЛЬЗОВАТЕЛЯ, НЕ НАДО ЭТО ПИСАТЬ
nzip zip gcc build-essential make
я
g-dev libbz2-dev libreadline-dev llvm libncurses5-dev libncursesw5-dev
-dev libbz2-dev libreadline-dev llvm libncurses5-dev libncursesw5-dev
yrussell/oh-my-zsh/master/tools/install.sh)"
#######
отреть на сайте
щью сборшиков типа make и тд, и устанавливаем все в одну папку
 python, нужно будет удалить лишь одну папку
tgz ; \
ython ; \
* [Makefile:1275: altinstall] Error 1
 том, что отсутствует зависимость. В данном случае заголовки zlib.
in" >> /etc/apt/sources.list
bugs.python.org/issue36135 .
ного окружения
и что-то не будет работать перепроверь эти настройки
;
name;
OUR NOR ONL UNI COM NAV"';
les/;
для тестирования
rn
django_user
;
;
_trgm_ops';
му
env
's Encrypt
debian)
env
's Encrypt
debian)

sudo apt-get build-dep python3-lxmlрому хотим подключится
 ПОЛЬЗОВАТЕЛЯ, НЕ НАДО ЭТО ПИСАТЬ
nzip zip gcc build-essential make
я
g-dev libbz2-dev libreadline-dev llvm libncurses5-dev libncursesw5-dev
-dev libbz2-dev libreadline-dev llvm libncurses5-dev libncursesw5-dev
yrussell/oh-my-zsh/master/tools/install.sh)"
#######
отреть на сайте
щью сборшиков типа make и тд, и устанавливаем все в одну папку
 python, нужно будет удалить лишь одну папку
tgz ; \
ython ; \
* [Makefile:1275: altinstall] Error 1
 том, что отсутствует зависимость. В данном случае заголовки zlib.
in" >> /etc/apt/sources.list
bugs.python.org/issue36135 .
ного окружения
и что-то не будет работать перепроверь эти настройк[[
;
name;
OUR NOR ONL UNI COM NAV"';
les/;
для тестирования
rn
django_user
;
;
_trgm_ops';
му
env
's Encrypt
debian)